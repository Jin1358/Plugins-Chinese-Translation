# GeckoLib 
blockly.block.play_newgeckoanim=如果实体元素%1是%3，则播放动画%2
blockly.block.stop_procedure=如果实体元素%1是%2，则停止当前流程触发的动画
modelement.animatedblock=动画方块
modelement.animatedblock.description=GeckoLib动画方块
elementgui.animatedblock.model=GeckoLib方块模型:
elementgui.animatedblock.modelname=无效模型!
blockly.block.block_animation=在x:%1 y:%2 z:%3处播放名为%4的动画
blockly.block.stop_block_animation=停止在x:%1 y:%2 z:%3流程触发的任何方块的动画
blockly.block.get_entity_animation=如果实体元素%1是%2，则获得当前流程触发的动画
modelement.animateditem=动画物品
modelement.animateditem.description=GeckoLib动画物品
elementgui.animateditem.model=GeckoLib物品模型
elementgui.animateditem.modelname=无效模型!
elementgui.aniblockitems.display_settings_missing=缺少显示设置!
elementgui.aniblockitems.display_settings=GeckoLib显示设置:
blockly.block.item_animation=如果物品元素%1是物品%3，则播放动画%2
blockly.block.stop_item_animation=如果物品元素%1是物品%2，则停止当前流程触发的动画
blockly.block.get_item_animation=如果物品元素%1是物品%2，则获得当前流程触发的动画
blockly.block.no_animation=无动画
blockly.block.get_armor_item=从元素注册名%2中获取动画盔甲%1
blockly.block.set_entity_texture=如果实体元素%1是%2，则将纹理设置为%3
blockly.block.get_entity_texture=如果实体元素%1是%2，那么获取它的纹理
blockly.block.is_geckolib_entity=%1是GeckoLib实体
blockly.block.set_armor_animation=如果%3是盔甲元素%1的一部分，则播放动画 %2
blockly.block.stop_armor_animation=如果%2是盔甲元素%1的一部分，则停止当前流程触发的动画
dialog.geckolib.error_no_dependency=未找到GeckoLib
dialog.geckolib.enable_geckolib=您正在尝试创建一个GeckoLib元素，但它在工作区设置中未启用，保存元素时不使用它将导致构建错误。
menubar.geckolib=GeckoLib
action.workspace.resources.import_geckolib_model=导入GeckoLib模型…
action.workspace.resources.import_display_settings=导入GeckoLib显示设置…
action.tutorial=官方插件教程
modelement.animatedentity=动画实体
modelement.animatedentity.description=一个GeckoLib动画实体
elementgui.living_entity.condition_solid_bounding_box=实心碰撞箱条件
elementgui.animatedentity.modelname=无效模型!
elementgui.animatedentity.entity_model=<html>实体模型<br><small>支持类型：GECKOLIB
elementgui.animatedentity.animations_page=动画
elementgui.animatedentity.disable_death_rotation=禁用实体死亡后旋转
elementgui.animatedentity.death_time=实体死亡时间(单位:刻)
elementgui.animatedentity.idle_required=实体必须有一个空闲动画!
elementgui.animatedentity.animation_name=动画的名字:
elementgui.animatedentity.idle_animation=空闲动画
elementgui.animatedentity.walk_animation=行走动画
elementgui.animatedentity.death_animation=死亡动画
elementgui.animatedentity.attack_animation=攻击动画
elementgui.animatedentity.swim_animation=游泳的动画
elementgui.animatedentity.sneak_animation=潜行动画
elementgui.animatedentity.sprint_animation=冲刺动画
elementgui.animatedentity.flight_animation=飞行动画
elementgui.animatedentity.riding_animation=骑乘动画
elementgui.animatedentity.aggression_animation=攻击动画
elementgui.animatedentity.animations_boarder=内置动画
elementgui.animatedentity.death_animations_boarder=死亡动画设置
elementgui.animatedentity.extras_boarder=额外动画
elementgui.animatedentity.finished_dying=当死亡时间到时
elementgui.animatedentity.head_movement=头部运动动画
elementgui.animatedentity.group_name=模型组名称:
elementgui.animatedentity.conditional_animation=播放返回的动画
elementgui.animatedentity.lerp=动画转换刻
elementgui.animatedentity.baby_model=子模型大小:
elementgui.animatedentity.loop_animation=循环外部动画
elementgui.animatedentity.eye_height=改变实体眼睛高度为:
elementgui.animatedentity.visual_scale=实体视觉尺寸:
elementgui.animatedentity.bounding_box_scale=碰撞箱尺度:
elementgui.animateditem.idle_animation=空闲动画名称:
elementgui.animateditem.needs_idle=该物品需要一个空闲动画!
elementgui.animateditem.perspective=播放动画的透视图:
elementgui.animateditem.first_person=启用第一人称手臂渲染
elementgui.animateditem.left_arm=左臂组名称:
elementgui.animateditem.right_arm=右臂组名称:
elementgui.animateditem.geckolib_model=<html>物品模型:<br><small>选择要使用的物品模型。支持类型：Geckolib
modelement.animatedarmor=动画盔甲
modelement.animatedarmor.description=GeckoLib动画盔甲
elementgui.animatedarmor.geckolib_properties=GeckoLib属性
elementgui.animatedarmor.texture=盔甲纹理:
elementgui.animatedarmor.model_name=GeckoLib模型:
elementgui.animatedarmor.modelname=无效的模型名!
elementgui.animatedarmor.texture_invalid=必须选择纹理!
elementgui.animatedarmor.idle_required=必须选择一个纹理!
elementgui.animatedarmor.idle_animation=空闲动画名称:
elementgui.animatedarmor.fully_equipped=只有完全装备才有动画效果
elementgui.animatedarmor.head=盔甲模型头部组名称:
elementgui.animatedarmor.chest=盔甲模型胸部组名称:
elementgui.animatedarmor.right_arm=盔甲模型右臂组名称:
elementgui.animatedarmor.left_arm=盔甲模型左臂组名称:
elementgui.animatedarmor.right_leg=盔甲模型右腿组名:
elementgui.animatedarmor.left_leg=盔甲模型左腿组名:
elementgui.animatedarmor.right_boot=盔甲模型右脚组名称:
elementgui.animatedarmor.left_boot=盔甲模型左脚组名称:
dialog.selector.animatedarmor.title=动画盔甲选择
dialog.selector.animatedarmor.message=请选择一个动画盔甲:
dialog.selector.animatedentity.title=动画实体选择
dialog.selector.animatedentity.message=请选择一个动画实体:
dialog.selector.animateditem.title=动画物品选择
dialog.selector.animateditem.message=请选择一个动画物品：
dialogs.convert_to_geckolib=实体元素转换器
dialogs.convert_button=转换为GeckoLib
dialogs.convert_from_geckolib=GeckoLib元素转换器
dialogs.convert_from_button=转换为常规实体

# attribute 
elementgui.attribute.page.new=属性
elementgui.attribute.page.entities=添加到实体
elementgui.attribute.add_entry=添加实体类型
elementgui.attribute.entity_list_add=要向其添加属性的实体
elementgui.attribute.description=游戏内属性名称
elementgui.attribute.defaultValue=默认值
elementgui.attribute.minValue=最小值
elementgui.attribute.maxValue=最大值
elementgui.attribute.isPersistent=死亡后保留
elementgui.attribute.border=属性的属性
modelement.attribute=属性
modelement.attribute.description=创建自定义属性
dialog.entity_list_entry.remove_entity=删除实体类型
dialog.selector.attribute.title=属性选择
dialog.selector.attribute.message=请选择一个属性
trigger.item_attribute_modifier=计算属性的修饰符
blockly.block.add_modifier_to_item=将属性%2的修饰符%1添加到依赖项中
blockly.block.add_modifier_to_item_custom=将自定义属性%2的修饰符%1添加到依赖项中
blockly.block.add_modifier_to_item_from_mod=将属性%2的修饰符%1添加到依赖项中
blockly.block.create_new_modifier=创建新的修饰符,UUID:%1并命名为%2,默认值:%3,进行操作%4
blockly.block.event_modifier_slot=对于储存槽%1执行%2(使用计算属性修饰符触发器)
blockly.block.get_attribute=从%2获取属性%1的基本值
blockly.block.get_attribute_custom=从%2获取自定义属性%1的基本值
blockly.block.get_attribute_from_mod=从%2获取属性%1的基本值
blockly.block.get_attribute_whole=从%2获取属性%1的值
blockly.block.get_attribute_whole_custom=从%2获取自定义属性%1的值
blockly.block.get_attribute_whole_from_mod=从%2获取属性%1的值
blockly.block.has_attribute=是否有属性%2实体%1
blockly.block.has_attribute_custom=是否有自定义属性%1实体%2
blockly.block.has_attribute_from_mod=是否有属性%2实体%1
blockly.block.remove_modifier_to_item=从依赖项中删除属性%2的修饰符%1
blockly.block.remove_modifier_to_item_custom=从依赖项中删除自定义属性%2的修饰符%1
blockly.block.remove_modifier_to_item_from_mod=从依赖项中删除属性%2的修饰符%1
blockly.block.set_attribute=将%2的属性%1的基本值设置为%3
blockly.block.set_attribute_custom=将%2的自定义属性%1的基本值设置为%3
blockly.block.set_attribute_from_mod=将%2的属性%1的基本值设置为%3

# chunkmanager 
blockly.category.chunkmanager=区块管理器
blockly.block.chunk_get_at=获取x:%1 y:%2 z:%3处的区块
blockly.block.chunk_get_start_x=获取%1的起始的x
blockly.block.chunk_get_start_x.tooltip=获取属于这个区块的第一个世界X坐标
blockly.block.chunk_get_start_z=获取%1的起始的z
blockly.block.chunk_get_start_z.tooltip=获取属于这个区块的第一个世界Z坐标
blockly.block.chunk_get_end_x=获取%1的结束的x
blockly.block.chunk_get_end_x.tooltip=获取属于该区块的最后一个世界X坐标
blockly.block.chunk_get_end_z=获取%1的结束的z
blockly.block.chunk_get_end_z.tooltip=获取属于这个区块的最后一个世界Z坐标
blockly.block.chunk_get_region_x=获取%1的区域的x
blockly.block.chunk_get_region_x.tooltip=获取包含此区块的区域文件的x坐标
blockly.block.chunk_get_region_z=获取%1的区域的z
blockly.block.chunk_get_region_z.tooltip=获取包含此区块的区域文件的z坐标
blockly.block.chunk_get_region_relative_x=获取%1相对于x的区域
blockly.block.chunk_get_region_relative_x.tooltip=在包含该区块的区域文件中获取该区块的x坐标
blockly.block.chunk_get_region_relative_z=获取%1相对于z的区域
blockly.block.chunk_get_region_relative_z.tooltip=在包含该区块的区域文件中获取该区块的z坐标
blockly.block.chunk_force_load=如果%2不加载，则强制%1加载
blockly.block.chunk_force_load.tooltip=这个区块将一直被加载，直到你卸载它，否则该区块将不断加载
blockly.block.chunk_is_modified=%1未保存
blockly.block.chunk_get_inhabited_time=获取%1停留时间(以刻为单位)

# damagesource 
blockly.block.damagesource_add_damage_source_modifier=添加修饰符%1到%2
blockly.block.damagesource_custom_damage_source=创建死亡信息键名为death.attack.%1的自定义伤害源
blockly.block.damagesource_custom_entity_damage_source =基于%2创建死亡信息键名为death.attack.%1.player的自定义伤害源
blockly.block.damagesource_custom_indirect_entity_damage_source=基于%3的%2创建死亡信息键名为death.attack.%1.player的自定义伤害源
blockly.block.damagesource_damage_source=创建伤害源%1
blockly.block.damagesource_entity_damage_source = 创建由%2造成的%1伤害源
blockly.block.damagesource_indirect_entity_damage_source = 创建因%3而导致%2造成的伤害源%1
blockly.block.entity_data_get_uuid=获取%1的UUID
blockly.block.entity_data_spawn_entity=生成的实体
blockly.block.entity_deal_extended_damage=将造成%1的伤害量%2设置为%3
blockly.block.world_data_get_entity=%1获取UUID为%2的实体
blockly.block.world_spawn_entity=在x:%2 y:%3 z:%4处生成实体:%1，作为%5，执行%6
blockly.category.damagesource=Damage Source
dialog.selector.damagesourcelist.message = 请选择伤害源
dialog.selector.damagesourcelist.title = 伤害源选择
dialog.selector.damagesourcemodifierlist.message = 请选择一个伤害源修改器
dialog.selector.damagesourcemodifierlist.title = 选择伤害源修改器

# metadataeditor 
blockly.category.metadata=元数据编辑器
blockly.block.entity_logic_set=将%2的逻辑数据条目%1设置为%3
blockly.block.entity_logic_get=获取%2的逻辑数据条目%1
blockly.block.entity_logic_tag_set=将%3的列表中的%2中的逻辑数据项%1设置为%4
blockly.block.entity_logic_tag_get=获得逻辑数据输入%1在%2的%3
blockly.block.entity_text_set=将文本数据条目中的%2的%1设置为%3
blockly.block.entity_text_get=获取%2的文本数据条目中的%1
blockly.block.entity_text_tag_set=将%3的列表中的%2中的文本数据条目%1设置为%4
blockly.block.entity_text_tag_get=在%3的列表中的%2中获取文本数据条目%1
blockly.block.entity_num_set=将数字数据条目%2的%1设置为%3
blockly.block.entity_num_get=获取%2的数字数据条目%1
blockly.block.entity_num_tag_set=在%3到%4的列表中的%2中设置数字数据条目%1
blockly.block.entity_num_tag_get=在%3的列表中的%2中获取数字数据条目%1

# proceduresplus 
blockly.category.proceduresplus=Procedures+管理
blockly.category.procedurespluscomp=Procedures+数据
blockly.block.set_no_physics=将%1的无重力效果设置为%2(仅勾选“当加载的实体更新可刻时”)
blockly.block.change_vanilla_texture=将原版纹理%1改为纹理%2
blockly.block.identity=将%1变成%2
blockly.block.identity_demorph=移除%1的改变
blockly.block.number_of_slots=获得在x:%1 y:%2 z:%3处的槽数(如果它有背包)
blockly.block.is_a_key_pressed=键%1是否按下了%2
blockly.block.sphere_hole=在一个半径为xz:%1 y-1的圆形中，在球面XYZ上重复:%2次，做%3
blockly.block.sphere_x=在球面X+%1
blockly.block.sphere_y=在球面Y+%1
blockly.block.sphere_z=在球面Z+%1
blockly.block.keybind_get_key=，按键绑定%1是否被给%2时获取按键
blockly.block.fixed_ternary=如果%1则%2否则%3
blockly.block.get_hotbar_slot=获取选定的快捷栏储存槽为%1
blockly.block.keybind_get_key_1165only=获取键绑定%1分配给%2的键(仅1.16.5)
blockly.block.for_loop=为%1 %8%6%4%2 %9%5 %7%3
blockly.block.undo_texture=恢复原版纹理的纹理变化:%1
blockly.block.hemisphere_top=在上半球形状x:%4 y:%5 z:%6，半径xz:%1 y:%2做%3
blockly.block.hemisphere_top_x=上半球X
blockly.block.hemisphere_top_y=上半球Y
blockly.block.hemisphere_top_z=上半球Z
blockly.block.sphere=在x:%4 y:%5 z:%6的球面上，半径xz:%1直径y:%2做%3
blockly.block.sphere_x=球体X
blockly.block.sphere_y=球体Y
blockly.block.sphere_z=球体Z
blockly.block.hemisphere_bottom_x=下半球X
blockly.block.hemisphere_bottom_y=下半球X
blockly.block.hemisphere_bottom_z=下半球X
blockly.block.hemisphere_bottom=在下半球形状x:%4 y:%5 z:%6，半径xz:%1 y:%2做%3

#EXTRAS (procedures) 
blockly.category.extra=Extra(Procedures)
blockly.block.distance=获取从X0:%1Y0:%2 Z0:%3 至 X1:%4 Y1:%5 Z1:%6 之间的距离
blockly.block.drawloop=在 X0:%1Y0:%2 Z0:%3 至 X1:%4Y1:%5 Z1:%6 %7之间绘制长方体
blockly.block.dosphere=绘制球形
blockly.block.dohollow=空心大小:% 1
blockly.block.tostr=文字串%2 %1
blockly.block.xvalue=X迭代器
blockly.block.yvalue=Y迭代器
blockly.block.zvalue=Z迭代器
blockly.block.squaredist=平方距离迭代器
blockly.block.intrange=整数范围内
blockly.block.doubletoint=转换为整数:%1
blockly.block.numpos=把X:%1Y:%2 Z:%3转为文字串
blockly.block.sphereloop=绘制半径为%1%2的球体
blockly.block.splitstr=是否分割:%1分割处:%2 位置:%3
blockly.block.fallingblock=在位置为x:%3 y: %4 z: %5 dx: %6 dy: %7 dz: %8 并在%2时候生成带额外数据 %9 的坠落的方块 %1
blockly.block.advprocedurearray=调用数组迭代器
blockly.block.advprocedurereturn=返回数组变数
blockly.block.codesnippetdouble=自定义代码片段: %1 %2 %3
blockly.block.stringtoitemstack=从编号%1根%2获取物品堆叠
blockly.category.arrays=(附加) - 数组
blockly.category.array=数组
blockly.block.arrayvarible=数组索引迭代器
blockly.block.arrayadd=将值%1添加到%2
blockly.block.arrayclear=清除%1
blockly.block.arraycontain=%1是否包含%2
blockly.block.arrayget=获取%1在%2处的值
blockly.block.arrayempty=%1是否为空
blockly.block.arrayremove=删除%1在%2处的值
blockly.block.arrayset=将%1的值设置为%2的%3
blockly.block.arraysize=获取%1的长度
blockly.block.arrayloop=走槽%1%2中的所有值
blockly.category.port=(附加)客户端到服务器[正在开发中]
blockly.block.clienttoserver=将%1发送到服务器槽端口%2
blockly.block.setupserverport=设置服务器端口:%1%2
blockly.block.vvalue=接收的文字串迭代器
trigger.endrender=禁用标准事件(额外功能)
blockly.category.experemental=实验性功能(额外功能)
blockly.block.rendercore=设置渲染核心%1
blockly.block.addrender=将渲染过程%1添加为方块 %2
blockly.block.starfield=渲染星域为方块纹理: %1
blockly.block.blockparticle=在x: %2 y: %3 z: %4与vx: %5 vy %6 vz %7处生成方块粒子: %1
blockly.block.dohollow=空心的大小: %1
blockly.block.fixnumberlist=固定输出的数字 %1
blockly.category.extra2=(附加) - 高级流程
blockly.block.advprocedure=调用过程: %1 发送数组: %2 与额外的数据: %3 并接收数组
blockly.block.advproceduretrigger=自定义流程调用 %2 %1
blockly.block.codesnippetinput=自定义代码片段: %1 %2

# eventsprocedures 
blockly.category.eventsprocedures=Events Procedures 
blockly.block._event_set_number=将%1事件的%2数字依赖项设置为%3
blockly.block._event_set_string=将%1事件的%2文本依赖项设置为%3
blockly.block._event_set_logic=将%1事件的%2逻辑依赖项设置为%3
trigger.block_multiplace=一个方块是多重放置的
trigger.entity_dropxp=实体掉落经验时
trigger.entity_fall=实体摔落时
trigger.entity_onteleport=实体传送时
trigger.player_pickupxp=玩家获得经验时
trigger.player_useitem_start=玩家使用物品时
trigger.player_useitem_stop=玩家停止使用物品时
trigger.player_useitem_finish=玩家完成使用物品时
trigger.entity_pre_knockback=实体被击退之前

# KleidersRenderEvent 
blockly.block.player_texture_changer=更改玩家皮肤为%1图层:%2
blockly.block.player_model_changer_new=(1.18+) 添加模型%1到玩家纹理%2是否隐藏原模型:%3
blockly.block.player_model_changer=(1.16.5) 添加模型%1到玩家，纹理%2是否隐藏原模型:%3
blockly.block.entity_model_changer_new=(1.18+) 添加模型%1到怪物实体与纹理%2是否隐藏原模型:%3
blockly.block.entity_model_changer=(1.16.5) 添加模型%1到玩家实体与纹理%2是否隐藏原模型:%3
blockly.block.render_event_starter=渲染事件开始时强制执行的流程
trigger.render_event=Kleiders' Render Event 

# Customsky
# 旧版
blockly.block.sky_render_clouds = 渲染云的高度：%1 vx:%2 vz:%3 纹理ID:%4 路径:%5
blockly.block.sky_render_fog_with_hsba_color = 渲染形状为%1的雾 起始渲染距离:%2 结束渲染距离:%3 HSBA颜色为H:%4 S:%5 B:%6 A:%7
blockly.block.sky_render_fog_with_rgba_color = 渲染形状为%1的雾 起始渲染距离:%2 结束渲染距离:%3 RGBA颜色为R:%4 G:%5 B:%6 A:%7
blockly.block.sky_render_sky_with_hsba_color = 渲染颜色为H:%2 S:%3 B:%4 A:%5且方向为%1的天空  
blockly.block.sky_render_sky_with_rgba_color = 渲染颜色为R:%2 G:%3 B:%4 A:%5且方向为%1的天空  
blockly.block.sky_render_star_with_hsba_color = 在种子为%2的天空上渲染%1颗颜色为H:%3 S:%4 B:%5 A:%6的星星 
blockly.block.sky_render_star_with_rgba_color = 在种子为%2的天空上渲染%1颗颜色为R:%3 G:%4 B:%5 A:%6的星星 
blockly.block.sky_render_sunlight_with_hsba_color = 渲染颜色为H:%1 S:%2 B:%3 A:%4的太阳光 
blockly.block.sky_render_sunlight_with_rgba_color = 渲染颜色为R:%1 G:%2 B:%3 A:%4的太阳光 
blockly.block.sky_render_texture = 在天空中渲染纹理ID:%1 路径:%2 偏移量:%3 是否旋转:%4 是否变平:%5 大小:%6 天气效果是否启用:%7
blockly.block.sky_render_texture_sky = 用纹理ID为%1渲染天空 路径:%2
blockly.block.sky_render_texture_sky_with_direction = 用纹理ID为%1渲染天空 路径:%2 方向:%3
blockly.block.sky_render_vanilla_elements = 是否用原版元素渲染天空上面:%1 天空下面:%2 星星:%3 太阳光:%4 太阳:%5 月亮:%6 云:%7 天气:%8 末地天空:%9
blockly.block.sky_render_weather = 渲染天气类型为%1 纹理ID:%2 路径:%3 生物群系效果是否启用:%4 是否不变:%5
blockly.block.sky_set_custom_vanilla_sky = 设置自定义原版天空为%1
blockly.block.sky_set_weather_particles = 设置天气粒子为%1 蒸发粒子为%2 声音:%3 生物群系效果是否启用:%4 是否不变:%5
dialog.selector.colorlist.message = 请选择一个色彩要素:
dialog.selector.colorlist.title = 色彩要素选择
blockly.block.skydata_get_cloud_height = 获取原版云的高度
blockly.block.skydata_get_fog_color = 获取原版雾的颜色:%1
blockly.block.skydata_get_fog_end_distance = 获取原版雾结束渲染的距离
blockly.block.skydata_get_fog_start_distance = 获取原版雾开始渲染的距离
blockly.block.skydata_get_sky_color = 获取原版天空的颜色:%1
blockly.block.skydata_get_star_color = 获取原版星星的颜色:%1
blockly.block.skydata_get_sunlight_color = 获取原版太阳光的颜色:%1
blockly.category.sky = 天空管理
blockly.category.skydata = 天空数据
trigger.render_sky_event = 渲染天空时
dialog.selector.hsbacolorlist.message = 请选择HSBA颜色的组件
dialog.selector.hsbacolorlist.title = HSBA颜色选择组件
dialog.selector.rgbacolorlist.message = 请选择RGBA颜色的组件
dialog.selector.rgbacolorlist.title = RGBA颜色选择组件
# 新版
blockly.block.get_cloudcolor = 获得%1的原版云
blockly.block.get_cloudposition = 获取位置:%2中原版云的%1
blockly.block.get_daylevel = 获取当前天数
blockly.block.get_fogcolor = 获得%1的原版雾
blockly.block.get_fogend = 获取雾结束渲染的位置
blockly.block.get_fogstart = 获取雾开始渲染的位置
blockly.block.get_rainlevel = 获取降雨强度
blockly.block.get_skycolor = 获得%1的原版天空
blockly.block.get_starcolor = 获得%1的原版天空
blockly.block.get_thunderlevel = 获得雷暴时降雨强度
blockly.block.get_weatherwdh = 获取原版天气的天气类型和持续时间和天气强度
blockly.block.get_worldheight = 获得x:%1 z:%2处的世界高度
blockly.block.is_brightlight = %1的光源是否有效
blockly.block.is_rainnable = 在x:%1 y:%2 z:%3处是否可以下雨
blockly.block.is_shelter = 在x:%1 y:%2 z:%3处是否有避雨处
blockly.block.is_snowable = 在x:%1 y:%2 z:%3处是否可下雪
blockly.block.get_sunlightcolor = 获得%1原版的日出/日落
blockly.block.provided_parameter = 提供的参数
blockly.block.set_boxsize = 将天空箱的大小%1设置为宽度:%2高度:%3深度:%4
blockly.block.set_hsla = 设置%1的HSLA颜色为H:%2 S:%3 L:%4 A:%5
blockly.block.set_particle = 将%1的粒子类型设置为%2 vx:%3 vy:%4 vz:%5
blockly.block.set_position = 设置%1的位置为x:%2 y:%3 z:%4
blockly.block.set_rgba = 设置%1的RGBA颜色为R:%2 G:%3 B:%4 A:%5
blockly.block.set_rotation = 设置%1的旋转为偏移为%2俯仰为%3反转为%4
blockly.block.set_size = 将%1的大小设置为%2
blockly.block.set_sound = 将%1的声音类型设置为%2级别:%3音高:%4
blockly.block.set_texture = 将%1的纹理ID设置为%2名称:%3
blockly.block.set_texture_with = 将%1的纹理ID设置为:%2名称:%3方向:%4
blockly.block.set_velocity = 将速度%1设置为vx:%2 vy:%3 vz:%4
blockly.block.set_weathereffect = 将%1的天气效果设置为%2
blockly.block.set_uv = 将%1的uv值设置为u0:%2 v0:%3 u1:%4 v1:%5
blockly.block.x_iterator = X 迭代器
blockly.block.y_iterator = Y 迭代器
blockly.block.z_iterator = Z 迭代器
blockly.block.add_weather_particles_and_sounds = 添加天气粒子/声音:%1配置:%2与%3
blockly.block.create_sky = 创建天空时%1与明亮的光源:%2
blockly.block.render_all_vanilla_objects = 渲染所有原版物体(除了末地)
blockly.block.render_clouds = 渲染云的类型:%1渲染距离dx:%2 dz:%3与%4
blockly.block.render_deep = 用%1渲染深天空
blockly.block.render_polygon = 渲染多边形顶点:%1和%2
blockly.block.render_skybox = 渲染天空盒单一纹理:%1与%2
blockly.block.render_stars = 在种子:%2渲染星星数量:%1与%3
blockly.block.render_sunlights = 用%1渲染日出/日落
blockly.block.render_texture = 渲染纹理类型:%1特殊混合:%2与%3
blockly.block.render_vanilla_bottomsky = 渲染原版底部的天空
blockly.block.render_vanilla_clouds = 渲染原版云
blockly.block.render_vanilla_endsky = 渲染原版末地天空
blockly.block.render_vanilla_moon = 渲染原版月亮
blockly.block.render_vanilla_objects = 渲染原版物体云:%1 末地天空:%2 天空顶部:%3 天空底部:%4 太阳光:%5 星星:%6 太阳:%7 月亮:%8 天空:%9
blockly.block.render_vanilla_stars = 渲染原版星星
blockly.block.render_vanilla_sun = 渲染原版太阳
blockly.block.render_vanilla_sunlights = 渲染原版太阳光
blockly.block.render_vanilla_topsky = 渲染原版天空顶部
blockly.block.render_vanilla_weather = 渲染原版天气
blockly.block.render_weather = 渲染天气类型:%1长度:%2速度:%3落地:%4与%5
blockly.block.set_fog = 将雾的形状设置为%1开始:%2结束:%3与%4
blockly.block.weather_area_foreach = 对于以%1为x的每个天气区域:%2 y:%3 z:%4 执行:%5
trigger.render_sky = 渲染天空时

# VectorUtils 
blockly.block.math_negative = -%1
blockly.block.vector_create = 创建向量x:%1 y:%2 z:%3
blockly.block.vector_equal = %1%2%3
blockly.block.vector_get_cross = 获取%1和%2的交叉处
blockly.block.vector_get_direction = 从%1的方向获取向量
blockly.block.vector_get_distance = 获取从%1到%2的距离
blockly.block.vector_get_dot = 获取%1和%2的点
blockly.block.vector_get_horizon = 获得%1的水平位置
blockly.block.vector_get_length = 获取%1的长度
blockly.block.vector_get_symmetry = 获取%1的对称向量(引用:%2)
blockly.block.vector_get_unit = 获取单位向量%1
blockly.block.vector_get_x = 获取X %1
blockly.block.vector_get_y = 获取Y %1
blockly.block.vector_get_z = 获取Z %1
blockly.block.vector_inverse = -%1
blockly.block.vector_lerp = 从%1到%2，因素:%3
blockly.block.vector_math = %1%2
blockly.block.vector_operate = %1%2%3
blockly.block.vector_rotate_axis = 旋转%1，角度:%2，轴:%3
blockly.block.vector_rotate_quaternion = 旋转%1，角度:%2，轴:%3
blockly.block.vector_rotate_yaw_pitch = 旋转%1，偏移:%2，俯仰度:%3
blockly.block.vector_scale = 将%1缩放到%2
blockly.block.vector_x_unit = X单位向量
blockly.block.vector_y_unit = Y单位向量
blockly.block.vector_z_unit = Z单位向量
blockly.block.vector_zero = 零向量
blockly.category.vector = 向量流程

# FabricEssentials 
trigger.on_entity_removal=关于实体移除(Fabric)
trigger.player_left_clicks_air=玩家左击空气时(Fabric)
trigger.player_inflicts_knockback=玩家造成击退时(Fabric)
blockly.category.fabricessentials=Fabric Essentials
blockly.block.camera_angle=将相机%1设置为%2
blockly.block.wait_thread=等待%1 %2毫秒，然后%3，执行%4
blockly.block.set_fov=将客户端视图域设置为%1
blockly.block.reset_camera=重置相机状态
blockly.block.camera_position=设置相机位置为x: %1 y: %2 z: %3
blockly.block.move_camera=移动相机到%1 x %2 y %3 z
blockly.block.set_attribute=为%2设置属性基础值%1为%3
blockly.block.get_attribute=获取%2的属性%1的基本值
blockly.block.texture_changer=将原版纹理%1改为纹理:%2
blockly.block.is_key_pressed=键%1被按下
blockly.category.fabriccamera=Fabric相机
blockly.category.fabricplayer=Fabric玩家
blockly.category.fabricvariables=Fabric变量
blockly.block.player_slot_add=如果%4是玩家且储存槽是空的或可用的的话，则添加%2个%1到储存槽%3
blockly.block.player_try_to_add=如果%3是玩家的话，就将%2个%1添加到背包中，并删除多余的物品
blockly.block.player_drop=如果%3是玩家的话，就将%2 %1移向%3所面对的方向
blockly.block.player_drop_random=如果%3是玩家的话，就将%2 %1掉落至随机方向
blockly.block.new_tooltip_line=在提示框中单独给文本%1渲染在新行
trigger.tooltip_event=当提示框渲染时
blockly.category.itemtooltips=物品提示框
blockly.block.player_force_sleep=如果%1是玩家的话，则在x: %2 y: %3 z: %4处强制睡眠
blockly.block.removal_reason=实体的删除原因是否为%1
trigger.equipment_change=关于实体设备的变更(Fabric)
blockly.block.death_location=获取%1最后的死亡位置
blockly.block.death_coord=获取%2最后的死亡位置的%1
blockly.block.has_gui_open=%1当前打开了GUI
blockly.block.deal_knockback=处理x: %1 y: %2 z: %3击退到%4
blockly.block.heal_entity=治疗%1的%2伤害
blockly.block.set_pose=将%2的位置设置为%1
blockly.block.player_persistent_nbt_logic_get=获得%2玩家持久自定义逻辑NBT标签%1
blockly.block.player_persistent_nbt_logic_set=设置%3玩家持久自定义逻辑NBT标签从%1到%2
blockly.block.player_persistent_nbt_num_get=获得%2玩家持久自定义数字NBT标签%1
blockly.block.player_persistent_nbt_num_set=设置%3玩家持久自定义数字NBT标签从%1到%2
blockly.block.player_persistent_nbt_text_get=获得%2玩家持久自定义文本NBT标签%1
blockly.block.player_persistent_nbt_text_set=设置%3玩家持久自定义文本NBT标签从%1到%2

# ConfigurationFile 
elementgui.config.page.new=配置文件名称
elementgui.config.page.procedure=配置文件变量
modelement.config=配置
modelement.config.name=创建一个配置文件
modelement.config.description=一个模组配置文件
elementgui.config.needs_name=名称不能为空
elementgui.config.name=配置文件名称:
elementgui.config.categoryname=配置类别名称:
elementgui.config.configuration_variables=变量类型:
elementgui.config.new_category=添加配置类别
elementgui.config.new_variable=添加配置变量
elementgui.config.remove_category=删除这个类别
elementgui.config.remove_variable=删除这个变量
elementgui.config.configcategory=配置类别
elementgui.config.enable_comment=变量有一个注释
elementgui.config.comment_entry=变量注释:
elementgui.config.configuration_variable_name=变量名称:
elementgui.config.variable_value=默认变量值:
elementgui.config.variable_display=文件中变量的显示名称:
elementgui.config.type=配置类型:
elementgui.config.notempty=名称不能为空!
elementgui.config.regname=必须是一个注册名!
elementgui.config.comment_only=只使用注释
dialog.selector.config.title=配置文件选择
dialog.selector.config.message=请选择一个配置文件
blockly.category.configdata=配置数据
blockly.block.registry_block=获取方块%1的注册名
blockly.block.registry_item=获取物品%1的注册名
blockly.block.registry_entity=获取实体%1的注册名 
blockly.block.text_variable=从配置元素%2获取文本（Text）变量%1
blockly.block.logic_variable=从配置元素%2获取逻辑（Logic）变量%1
blockly.block.number_variable=从配置元素%2获取数字（Number）变量 %1
blockly.block.registry_to_item=将注册名%1转换为物品
blockly.block.registry_to_block=将注册名%1转换为方块

# CuriosAPI 本汉化由Jin1358制作
blockly.category.curios=Curios API
trigger.curio_equip_return=在饰品栏更换时，返回装备的物品
trigger.curio_unequip_return=在饰品栏改变时，返回未装备的物品
blockly.block.is_curioitem=%1是一个饰品饰物
blockly.block.is_curio=%1可以装备在饰品栏里
blockly.block.curio_equipped_foreach=对于%2的饰品栏中的每个物品%1，作为%3，执行%4
blockly.block.is_equipped=%1装备了%2
modelement.curiosbauble=饰品饰物
modelement.curiosbauble.description=饰品API的饰物物品。
elementgui.curiosbauble.curio_tick=饰物的装备时，每刻发生
elementgui.curiosbauble.on_equip=装备了饰物时
elementgui.curiosbauble.on_unequip=没有装备饰物时
elementgui.curiosbauble.properties=饰物配置
elementgui.curiosbauble.slot_type=饰物类型:
elementgui.curiosbauble.add_slots=这个饰物应该增加新的饰品栏吗?
elementgui.curiosbauble.slot_amount=需要添加的该类型栏位数量:
elementgui.curiosbauble.piglins=在佩戴时候猪灵会保持中立吗？
elementgui.curiosbauble.endermask=在佩戴时末影人会保持中立吗？
elementgui.curiosbauble.has_model=在装备时渲染自定义模型？
elementgui.curiosbauble.java_model=自定义饰物的Java模型:
elementgui.curiosbauble.model_texture=自定义饰物模型纹理:
elementgui.curiosbauble.rotate_model=在潜行时与玩家一起旋转模型
elementgui.curiosbauble.translate_model=在潜行时翻译模型姿势

# ProcedureFiesta 
blockly.block.entity_kill=杀死%1
blockly.block.equip_saddle=使%1装备鞍
blockly.block.get_animallove=获取动物%1的求爱刻数
blockly.block.get_animal_loveby=获取被动物%1所跟随的玩家%2
blockly.block.get_enderman_block=获取末影人%1正在拿的方块%2
blockly.block.get_entity_fishing=%2 获得玩家%1的钓鱼鱼漂
blockly.block.get_entity_maxoxygen=获取%1的最大氧气值 
blockly.block.get_entity_tickcount=获取%1已存在的刻数
blockly.block.get_namevisible=%1的名称是否总是可见的
blockly.block.get_sheep_color=获取绵羊%1的颜色作为字符串
blockly.block.get_sheep_sheared=绵羊%1被剪毛
blockly.block.get_slime_size=获取史莱姆/岩浆怪%1的大小
blockly.block.has_customname=%1有一个自定义名称
blockly.block.has_saddle=%1已装备鞍
blockly.block.set_animallove=将动物%1的求爱刻数设置为%2
blockly.block.set_animal_loveby=将动物%1所跟随的玩家设置为%2
blockly.block.set_entity_alwaysrender=使%1为可见状态，即使碰撞箱在 %2 视野外
blockly.block.set_entity_invisible=将%1的不可见状态设置为%2
blockly.block.set_entity_tickcount=将%1已存在的刻数设置为%2
blockly.block.set_glowing=将%1的发光状态设置为%2
blockly.block.set_invulnerable=将%1的无敌状态设置为%2
blockly.block.set_namealwaysvisible=将%1的名称设置为始终可见%2
blockly.block.set_sheep_color=将绵羊%1颜色设置为 %2
blockly.block.set_sheep_sheared=将绵羊%1被剪毛的状态设置为%2
blockly.block.set_slime_size=将史莱姆/岩浆怪%1的尺寸设置为%2并恢复%3血量
dialog.selector.sheep_colors.title=请选择一种颜色
dialog.selector.sheep_colors.message=颜色过多！
